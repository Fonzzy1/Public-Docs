name: Update PDF List

on:
  push:
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate PDF List
        run: |
          echo "Generating index.html"
          PDF_LIST=""
          for pdf in Files/*.pdf; do
            BASENAME=$(basename "$pdf")
            PDF_LIST="$PDF_LIST<li><a href='./$pdf'>$BASENAME</a></li>\n"
          done

          cat <<EOF > index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>PDF List</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 20px; }
                  h1 { text-align: center; }
                  ul { list-style-type: none; padding: 0; }
                  li { margin: 10px 0; }
                  a { text-decoration: none; color: #007BFF; }
                  a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <h1>Available PDFs</h1>
              <ul id="pdf-list">
                  $PDF_LIST
              </ul>
          </body>
          </html>
          EOF

      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add index.html
            git commit -m "Update index.html with latest PDF list"
            git push
          else
            echo "No changes to commit"
          fi

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

